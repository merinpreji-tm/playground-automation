name: Playground Tests
on:
  workflow_dispatch:
    inputs:
      email:
        description: 'Enter Email ID'
        required: true
      password:
        description: 'Enter Password'
        required: true
      testFile:
        description: 'Select test file to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - tests/playground.test.ts
          - tests/cart.test.ts
          - tests/e2e.test.ts
          - tests/wishlist.test.ts
      browser:
        description: 'Select browser'
        required: true
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
          - Google Chrome
          - Microsoft Edge
      parallelCount:
        description: 'How many times to run the same test file in parallel'
        required: true
        default: '1'

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          count=${{ github.event.inputs.parallelCount }}
          arr=$(seq -s ',' 1 $count)
          json="[${arr}]"
          echo "matrix=$json" >> $GITHUB_OUTPUT

  test:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        instance: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Create .env file from workflow inputs
        run: |
          echo email=${{ github.event.inputs.email }} >> .env
          echo password=${{ github.event.inputs.password }} >> .env
      - name: Run Playwright tests (instance ${{ matrix.instance }})
        env:
          REPORT_ID: ${{ matrix.instance }}
        run: |
          if [ "${{ github.event.inputs.testFile }}" = "all" ]; then
            npx playwright test --project="${{ github.event.inputs.browser }}" --reporter=html --output=playwright-report-${{ matrix.instance }}
          else
            npx playwright test "${{ github.event.inputs.testFile }}" --project="${{ github.event.inputs.browser }}" --reporter=html --output=playwright-report-${{ matrix.instance }}
          fi
      - name: Upload HTML Report ${{ matrix.instance }}
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.instance }}
          path: playwright-report-${{ matrix.instance }}
          retention-days: 30

  best-report:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download all report artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports

      - name: Pick best report (highest pass rate)
        run: |
          mkdir -p testArtifacts
          best_folder=""
          best_pass=0

          for folder in all-reports/*; do
            json_file="$folder/.last-run.json"
            if [ -f "$json_file" ]; then
              passed=$(jq '[.suites[].specs[] | select(.ok==true)] | length' "$json_file")
              total=$(jq '[.suites[].specs[]] | length' "$json_file")
              if [ "$total" -gt 0 ]; then
                percent=$((100 * passed / total))
                echo "$folder: $percent%"
                if [ "$percent" -gt "$best_pass" ]; then
                  best_pass=$percent
                  best_folder=$folder
                fi
              fi
            fi
          done

          if [ -n "$best_folder" ]; then
            cp -r "$best_folder"/* testArtifacts/
            echo "Best report copied from $best_folder (pass rate: $best_pass%)"
          else
            echo \"No valid reports found\"
          fi

      - name: Upload Best HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: best-playwright-report
          path: testArtifacts
          retention-days: 30